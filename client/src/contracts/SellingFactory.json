{
  "contractName": "SellingFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "NewAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "NewSale",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_auctionTime",
          "type": "uint32"
        }
      ],
      "name": "newSaleOrAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSales",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllAuctions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"NewAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"NewSale\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllAuctions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSales\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_auctionTime\",\"type\":\"uint32\"}],\"name\":\"newSaleOrAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"newSaleOrAuction(address,uint256,uint256,uint32)\":{\"details\":\"impossible de faire 2 contrats \\u00e0 cause du probl\\u00e8me d'interface\",\"params\":{\"_auctionTime\":\"est le temps que doit durer l'enchere. Si il est \\u00e0 zero la fonction cr\\u00e9e une vente, sinon une auction \",\"_nft\":\"est l'addresse de la collection du nft\",\"_nftId\":\"est l'id du nft\",\"_price\":\"est le prix de vente dans le cas d'une sale, et le prix de d\\u00e9part pour une auction\"}}},\"stateVariables\":{\"allSales\":{\"details\":\"il faudrait cr\\u00e9er une fonction qui nettoie les tableaux et qui se lance \\u00e0 chaque cr\\u00e9ation de auctionOrSale\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"newSaleOrAuction(address,uint256,uint256,uint32)\":{\"notice\":\"cr\\u00e9e un nouveau contrat de vente ou d'auction pour un nft\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SellingFactory.sol\":\"SellingFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"project:/contracts/AuctionOrSale.sol\":{\"keccak256\":\"0xadb2e1d36a2392a94d754230e5d218358f5ab425b9b2c0a94864ed72939fa438\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39b6ed0da2f16a93d0876e73a425225a9aa8c20c0e2963f426eca88aeb94f8e6\",\"dweb:/ipfs/QmeWp6HSE711imhEfWvQmQbEpGN48QRLMHoqsgb5QTF6eb\"]},\"project:/contracts/SellingFactory.sol\":{\"keccak256\":\"0x6ad03e2e9580052239ee1bd3890af71d90852d0be63a164f1351fecc7e4042b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86b88b8cdee641c69ad5fedc800577174c35435ea3f86ace63d166262bf59a0f\",\"dweb:/ipfs/Qmccy6CwucYxh2kzxR3DX9FNUBYdC2E8S62QmdXat8ntRL\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611680806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063333969171461004657806373e2279414610064578063cbd2bdfd14610079575b600080fd5b61004e610081565b60405161005b91906103b7565b60405180910390f35b610077610072366004610411565b6100f0565b005b61004e61033d565b606060008054806020026020016040519081016040528092919081815260200182805480156100e657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116100bb575b5050505050905090565b8063ffffffff1660000361021c576000848484600033604051610112906103aa565b73ffffffffffffffffffffffffffffffffffffffff95861681526020810194909452604084019290925263ffffffff166060830152909116608082015260a001604051809103906000f08015801561016e573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051338152919250907f83f35c3d500677e8300bf0bbf471882d821904d2b410c5df88c5ca5d3ec0907a9060200160405180910390a250610337565b6000848484843360405161022f906103aa565b73ffffffffffffffffffffffffffffffffffffffff95861681526020810194909452604084019290925263ffffffff166060830152909116608082015260a001604051809103906000f08015801561028b573d6000803e3d6000fd5b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051338152919250907f3d7974c32ce472d784c795bc3d4465e0b7d5d323530e5bd66c1e93586f22179f9060200160405180910390a2505b50505050565b606060018054806020026020016040519081016040528092919081815260200182805480156100e65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116100bb575050505050905090565b6111cd8061047e83390190565b6020808252825182820181905260009190848201906040850190845b8181101561040557835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016103d3565b50909695505050505050565b6000806000806080858703121561042757600080fd5b843573ffffffffffffffffffffffffffffffffffffffff8116811461044b57600080fd5b93506020850135925060408501359150606085013563ffffffff8116811461047257600080fd5b93969295509093505056fe608060405234801561001057600080fd5b506040516111cd3803806111cd83398101604081905261002f916100af565b600080546001600160a01b039687166001600160a01b0319918216179091556001949094556004805463ffffffff9093166401000000000263ffffffff60201b19909316929092179091556002805491909416921691909117909155600555610111565b80516001600160a01b03811681146100aa57600080fd5b919050565b600080600080600060a086880312156100c757600080fd5b6100d086610093565b94506020860151935060408601519250606086015163ffffffff811681146100f757600080fd5b915061010560808701610093565b90509295509295909350565b6110ad806101206000396000f3fe60806040526004361061016e5760003560e01c806347ccca02116100cb578063a6f2ae3a1161007f578063d57bde7911610059578063d57bde79146103be578063ee2679bc146103d4578063efbe1c1c146103f357600080fd5b8063a6f2ae3a1461038b578063be9a655514610393578063c6bc5182146103a857600080fd5b80637cc3ae8c116100b05780637cc3ae8c146103295780637e5e219c1461033f57806391f901571461035257600080fd5b806347ccca02146102cf57806362ea82db146102fc57600080fd5b80631998aeef11610122578063359cbbc911610107578063359cbbc9146102915780633ccfd60b146102b257806345710074146102ba57600080fd5b80631998aeef1461026f5780631f2698ab1461027757600080fd5b806312065fe01161015357806312065fe0146101e857806312fa6feb14610205578063155f586d1461023557600080fd5b806308551a531461017a5780630afe6902146101d157600080fd5b3661017557005b600080fd5b34801561018657600080fd5b506002546101a79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101dd57600080fd5b506101e6610408565b005b3480156101f457600080fd5b50475b6040519081526020016101c8565b34801561021157600080fd5b506004546102259062010000900460ff1681565b60405190151581526020016101c8565b34801561024157600080fd5b5060045461025a90640100000000900463ffffffff1681565b60405163ffffffff90911681526020016101c8565b6101e66104b1565b34801561028357600080fd5b506004546102259060ff1681565b34801561029d57600080fd5b50600454610225906301000000900460ff1681565b6101e661069b565b3480156102c657600080fd5b506101e66107f4565b3480156102db57600080fd5b506000546101a79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561030857600080fd5b506101f7610317366004610ffb565b60066020526000908152604090205481565b34801561033557600080fd5b506101f760035481565b34801561034b57600080fd5b50426101f7565b34801561035e57600080fd5b506004546101a79068010000000000000000900473ffffffffffffffffffffffffffffffffffffffff1681565b6101e661095b565b34801561039f57600080fd5b506101e6610b22565b3480156103b457600080fd5b506101f760015481565b3480156103ca57600080fd5b506101f760055481565b3480156103e057600080fd5b5060045461022590610100900460ff1681565b3480156103ff57600080fd5b506101e6610cb7565b33600081815260066020526040808220805490839055600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff166301000000179055905190929183156108fc02918491818181858888f19350505050158015610477573d6000803e3d6000fd5b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a250565b600454610100900460ff1661050d5760405162461bcd60e51b815260206004820152600b60248201527f6e6f74207374617274656400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600354421061055e5760405162461bcd60e51b815260206004820152600560248201527f656e6465640000000000000000000000000000000000000000000000000000006044820152606401610504565b60055434116105af5760405162461bcd60e51b815260206004820152600f60248201527f76616c7565203c206869676865737400000000000000000000000000000000006044820152606401610504565b60045468010000000000000000900473ffffffffffffffffffffffffffffffffffffffff16156106255760055460045468010000000000000000900473ffffffffffffffffffffffffffffffffffffffff166000908152600660205260408120805490919061061f908490611038565b90915550505b600480547fffffffff0000000000000000000000000000000000000000ffffffffffffffff1633680100000000000000008102919091179091553460058190556040519081527fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2906020015b60405180910390a2565b60025473ffffffffffffffffffffffffffffffffffffffff1633146107025760405162461bcd60e51b815260206004820152600760248201527f43686561706572000000000000000000000000000000000000000000000000006044820152606401610504565b60045462010000900460ff16151560011461075f5760405162461bcd60e51b815260206004820152600960248201527f6e6f7420656e64656400000000000000000000000000000000000000000000006044820152606401610504565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff166301000000179055600554604051600091339181156108fc02919084818181858888f193505050501580156107be573d6000803e3d6000fd5b5060055460405190815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020016104a6565b60045460ff16156108475760405162461bcd60e51b815260206004820152601a60248201527f63726561746520616e6f746865722073616c6520706c656173650000000000006044820152606401610504565b6000546002546001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015230602482015260448101919091529116906323b872dd90606401600060405180830381600087803b1580156108c757600080fd5b505af11580156108db573d6000803e3d6000fd5b5050600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505060025460055460405173ffffffffffffffffffffffffffffffffffffffff909216917f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09916106919190815260200190565b60045460ff166109ad5760405162461bcd60e51b815260206004820152600b60248201527f6e6f7420737461727465640000000000000000000000000000000000000000006044820152606401610504565b6005543410156109bc57600080fd5b600554604051600091309181156108fc02919084818181858888f19350505050905080610a2b5760405162461bcd60e51b815260206004820152601360248201527f6661696c75726520746f2073656e6420657468000000000000000000000000006044820152606401610504565b6000546001546040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401600060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b5050600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1662010000179055505060055460405133917fc55650ccda1011e1cdc769b1fbf546ebb8c97800b6072b49e06cd560305b1d67916104a691815260200190565b600454610100900460ff1615610b7a5760405162461bcd60e51b815260206004820152600760248201527f73746172746564000000000000000000000000000000000000000000000000006044820152606401610504565b6000546002546001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015230602482015260448101919091529116906323b872dd90606401600060405180830381600087803b158015610bfa57600080fd5b505af1158015610c0e573d6000803e3d6000fd5b5050600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790819055610c5a925063ffffffff64010000000090910416905042611038565b6003556002546005546040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091527fcfb9c5312b25ec7b809d61e638df25f749eae5d5c25399e1c93d1d319bfd582191015b60405180910390a1565b600454610100900460ff16610d0e5760405162461bcd60e51b815260206004820152600b60248201527f6e6f7420737461727465640000000000000000000000000000000000000000006044820152606401610504565b600354421015610d605760405162461bcd60e51b815260206004820152600960248201527f6e6f7420656e64656400000000000000000000000000000000000000000000006044820152606401610504565b60045462010000900460ff1615610db95760405162461bcd60e51b815260206004820152600560248201527f656e6465640000000000000000000000000000000000000000000000000000006044820152606401610504565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1662010000179081905568010000000000000000900473ffffffffffffffffffffffffffffffffffffffff1615610f0357600054600480546001546040517f42842e0e000000000000000000000000000000000000000000000000000000008152309381019390935273ffffffffffffffffffffffffffffffffffffffff68010000000000000000909204821660248401526044830152909116906342842e0e90606401600060405180830381600087803b158015610e9c57600080fd5b505af1158015610eb0573d6000803e3d6000fd5b505060025460055460405173ffffffffffffffffffffffffffffffffffffffff909216935080156108fc029250906000818181858888f19350505050158015610efd573d6000803e3d6000fd5b50610f9c565b6000546002546001546040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff928316602482015260448101919091529116906342842e0e90606401600060405180830381600087803b158015610f8357600080fd5b505af1158015610f97573d6000803e3d6000fd5b505050505b600454600554604080516801000000000000000090930473ffffffffffffffffffffffffffffffffffffffff16835260208301919091527f7d7570b046e5ead3a4f3fbc9fa2445113625a1e79823776146316bafed6b8cc59101610cad565b60006020828403121561100d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461103157600080fd5b9392505050565b60008219821115611072577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220af3570fa74698d38f20d6a89d0ee761dc247185742f8e1a6f7a4cc73818984c764736f6c634300080d0033a2646970667358221220cb52cd0d5a03bc79560a30031d2d15dd9c1c5304911592a0914fb6d7e867351a64736f6c634300080d0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2700:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "165:530:14",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "175:12:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "185:2:14",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "179:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:32:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "214:9:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "225:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "210:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:18:14"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "200:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "244:9:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "255:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "237:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "237:21:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "267:17:14",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "278:6:14"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "271:3:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "293:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "313:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "307:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:13:14"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "297:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "336:6:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "344:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "329:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:22:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "329:22:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "360:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "382:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "367:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "367:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "360:3:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "394:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "412:6:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "420:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:15:14"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "398:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "432:10:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "441:1:14",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "436:1:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "500:169:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "536:6:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:5:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "530:13:14"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "545:42:14",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "526:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "526:62:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "514:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "514:75:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "514:75:14"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "602:19:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "613:3:14"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "618:2:14"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "609:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "609:12:14"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "602:3:14"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "634:25:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "648:6:14"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "656:2:14"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "644:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "644:15:14"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "634:6:14"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "462:1:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "465:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "459:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:13:14"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "473:18:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "475:14:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "484:1:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "487:1:14",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "480:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "480:9:14"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "475:1:14"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "455:3:14",
                    "statements": []
                  },
                  "src": "451:218:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "678:11:14",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "686:3:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "678:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "134:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "145:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "156:4:14",
                "type": ""
              }
            ],
            "src": "14:681:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "820:498:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "867:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "876:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "879:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "869:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "869:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "869:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "841:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "850:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "837:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "837:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "862:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "833:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:33:14"
                  },
                  "nodeType": "YulIf",
                  "src": "830:53:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "892:36:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "918:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "905:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:23:14"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "896:5:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1014:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1023:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1026:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1016:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1016:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1016:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "950:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "961:5:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "968:42:14",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "957:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "957:54:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "947:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:65:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "940:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "940:73:14"
                  },
                  "nodeType": "YulIf",
                  "src": "937:93:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1039:15:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1049:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:42:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1090:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1101:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1086:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1086:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1073:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:32:14"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1063:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:42:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1141:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1152:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1137:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:32:14"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1114:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1165:47:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1197:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1208:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1180:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:32:14"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1169:7:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1270:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1279:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1282:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1272:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1272:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1272:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1234:7:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1247:7:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1256:10:14",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1243:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1243:24:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1231:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1231:37:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1224:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:45:14"
                  },
                  "nodeType": "YulIf",
                  "src": "1221:65:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1295:17:14",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1305:7:14"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1295:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "762:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "773:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "785:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "793:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "801:6:14",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "809:6:14",
                "type": ""
              }
            ],
            "src": "700:618:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1551:346:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1561:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1573:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:3:14",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1569:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1569:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1561:4:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1597:52:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1607:42:14",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1601:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1665:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1680:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1688:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1676:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1676:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1658:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1712:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1723:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1708:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1708:18:14"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1728:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1701:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1701:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1701:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1755:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1766:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1751:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1751:18:14"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1771:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1744:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1798:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1809:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1794:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "1818:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1826:10:14",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1814:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1814:23:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1787:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1787:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1787:51:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1858:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1869:3:14",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1854:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:19:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "1879:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1887:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1875:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1875:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1847:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:44:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:44:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_address_payable__to_t_address_t_uint256_t_uint256_t_uint32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1488:9:14",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1499:6:14",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1507:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1515:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1523:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1531:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1542:4:14",
                "type": ""
              }
            ],
            "src": "1323:574:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2003:125:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2013:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2025:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2036:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2021:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2013:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2055:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2070:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2078:42:14",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2066:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:55:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2048:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2048:74:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2048:74:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1972:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1983:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1994:4:14",
                "type": ""
              }
            ],
            "src": "1902:226:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2352:346:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2362:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:3:14",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2370:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2362:4:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2398:52:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2408:42:14",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2402:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2466:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2481:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2489:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2477:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2477:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2459:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2459:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2513:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2524:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2509:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2509:18:14"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2529:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2502:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2556:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2567:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2552:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2552:18:14"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2572:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2545:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2545:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2599:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2610:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2595:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2595:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2619:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2627:10:14",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2615:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2615:23:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2588:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2588:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2588:51:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2659:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2670:3:14",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2655:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2655:19:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2680:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2688:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2676:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2676:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2648:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2648:44:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2648:44:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint32_t_address_payable__to_t_address_t_uint256_t_uint256_t_uint32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2289:9:14",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2300:6:14",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2308:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2316:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2324:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2332:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2343:4:14",
                "type": ""
              }
            ],
            "src": "2133:565:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xffffffff))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_address_payable__to_t_address_t_uint256_t_uint256_t_uint32_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint32_t_address_payable__to_t_address_t_uint256_t_uint256_t_uint32_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "105:1742:11:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "105:1742:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1040:599;;;;;;:::i;:::-;;:::i;:::-;;1745:100;;;:::i;1645:94::-;1689:17;1724:8;1717:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:94;:::o;1040:599::-;1147:12;:17;;1163:1;1147:17;1144:489;;1179:23;1223:4;1229:6;1237;1245:1;1256:10;1205:63;;;;;:::i;:::-;1607:42:14;1676:15;;;1658:34;;1723:2;1708:18;;1701:34;;;;1766:2;1751:18;;1744:34;;;;1826:10;1814:23;1809:2;1794:18;;1787:51;1875:15;;;1869:3;1854:19;;1847:44;1584:3;1569:19;1205:63:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1282:8:11;:33;;;;;;;;;;;;;;;;;;;;;;;;;1334:39;;1362:10;2048:74:14;;1282:33:11;;-1:-1:-1;1282:33:11;1334:39;;2036:2:14;2021:18;1334:39:11;;;;;;;1165:219;1144:489;;;1411:23;1455:4;1461:6;1469;1477:12;1499:10;1437:74;;;;;:::i;:::-;1607:42:14;1676:15;;;1658:34;;1723:2;1708:18;;1701:34;;;;1766:2;1751:18;;1744:34;;;;1826:10;1814:23;1809:2;1794:18;;1787:51;1875:15;;;1869:3;1854:19;;1847:44;1584:3;1569:19;1437:74:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1525:11:11;:36;;;;;;;-1:-1:-1;1525:36:11;;;;;;;;;;;;;;;;;;;1580:42;;1611:10;2048:74:14;;1525:36:11;;-1:-1:-1;1525:36:11;1580:42;;2036:2:14;2021:18;1580:42:11;;;;;;;1397:236;1144:489;1040:599;;;;:::o;1745:100::-;1792:17;1827:11;1820:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1745:100;:::o;-1:-1:-1:-;;;;;;;;:::o;14:681:14:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:14;;14:681;-1:-1:-1;;;;;;14:681:14:o;700:618::-;785:6;793;801;809;862:3;850:9;841:7;837:23;833:33;830:53;;;879:1;876;869:12;830:53;918:9;905:23;968:42;961:5;957:54;950:5;947:65;937:93;;1026:1;1023;1016:12;937:93;1049:5;-1:-1:-1;1101:2:14;1086:18;;1073:32;;-1:-1:-1;1152:2:14;1137:18;;1124:32;;-1:-1:-1;1208:2:14;1193:18;;1180:32;1256:10;1243:24;;1231:37;;1221:65;;1282:1;1279;1272:12;1221:65;700:618;;;;-1:-1:-1;700:618:14;;-1:-1:-1;;700:618:14:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n///@author Adam\n\nimport \"./AuctionOrSale.sol\";\n\ncontract SellingFactory{\n    ///@dev il faudrait créer une fonction qui nettoie les tableaux et qui se lance à chaque création de auctionOrSale\n    address[] allSales; //stockage des collections en vente directe\n    address[] allAuctions;//stockage des collections aux encheres\n\n\n    event NewSale(address indexed _contract, address _seller);\n    event NewAuction(address indexed _contract, address _seller);\n\n    event Debug(address _addr);\n    /**\n    *@dev impossible de faire 2 contrats à cause du problème d'interface\n    *@notice crée un nouveau contrat de vente ou d'auction pour un nft\n    *@param _nft est l'addresse de la collection du nft\n    *@param _nftId est l'id du nft\n    *@param _price est le prix de vente dans le cas d'une sale, et le prix de départ pour une auction\n    *@param _auctionTime est le temps que doit durer l'enchere. Si il est à zero la fonction crée une vente, sinon une auction \n    */\n    function newSaleOrAuction(address _nft, uint _nftId, uint _price, uint32 _auctionTime)external{\n        if(_auctionTime == 0){\n            AuctionOrSale _contract = new AuctionOrSale(_nft, _nftId, _price, 0, payable(msg.sender));\n            allSales.push(address(_contract));\n            emit NewSale(address(_contract), msg.sender);\n        }\n        else{\n            AuctionOrSale _contract = new AuctionOrSale(_nft, _nftId, _price, _auctionTime, payable(msg.sender));\n            allAuctions.push(address(_contract));\n            emit NewAuction(address(_contract), msg.sender);\n        }\n    }\n\n    function getAllSales()external view returns(address [] memory){\n        return allSales;\n    }\n\n    function getAllAuctions()external view returns(address [] memory){\n        return allAuctions;\n    }\n}",
  "sourcePath": "/home/amsteradams/developpement/fork-Opensea/contracts/SellingFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/SellingFactory.sol",
    "exportedSymbols": {
      "AuctionOrSale": [
        2086
      ],
      "IERC721": [
        1604
      ],
      "SellingFactory": [
        2293
      ]
    },
    "id": 2294,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2161,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "project:/contracts/AuctionOrSale.sol",
        "file": "./AuctionOrSale.sol",
        "id": 2162,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2294,
        "sourceUnit": 2087,
        "src": "74:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SellingFactory",
        "contractDependencies": [
          2086
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2293,
        "linearizedBaseContracts": [
          2293
        ],
        "name": "SellingFactory",
        "nameLocation": "114:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2163,
              "nodeType": "StructuredDocumentation",
              "src": "134:117:11",
              "text": "@dev il faudrait créer une fonction qui nettoie les tableaux et qui se lance à chaque création de auctionOrSale"
            },
            "id": 2166,
            "mutability": "mutable",
            "name": "allSales",
            "nameLocation": "266:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 2293,
            "src": "256:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2164,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2165,
              "nodeType": "ArrayTypeName",
              "src": "256:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2169,
            "mutability": "mutable",
            "name": "allAuctions",
            "nameLocation": "334:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 2293,
            "src": "324:21:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2167,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2168,
              "nodeType": "ArrayTypeName",
              "src": "324:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "83f35c3d500677e8300bf0bbf471882d821904d2b410c5df88c5ca5d3ec0907a",
            "id": 2175,
            "name": "NewSale",
            "nameLocation": "398:7:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2171,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "422:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2175,
                  "src": "406:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "441:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2175,
                  "src": "433:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:44:11"
            },
            "src": "392:58:11"
          },
          {
            "anonymous": false,
            "eventSelector": "3d7974c32ce472d784c795bc3d4465e0b7d5d323530e5bd66c1e93586f22179f",
            "id": 2181,
            "name": "NewAuction",
            "nameLocation": "461:10:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2177,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "488:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "472:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "507:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "499:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:44:11"
            },
            "src": "455:61:11"
          },
          {
            "anonymous": false,
            "eventSelector": "330da4cde831ccab151372275307c2f0cce2bcce846635cd66e6908f10d20363",
            "id": 2185,
            "name": "Debug",
            "nameLocation": "528:5:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "542:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "534:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:15:11"
            },
            "src": "522:27:11"
          },
          {
            "body": {
              "id": 2273,
              "nodeType": "Block",
              "src": "1134:505:11",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2197,
                      "name": "_auctionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2194,
                      "src": "1147:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1163:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1147:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2271,
                    "nodeType": "Block",
                    "src": "1397:236:11",
                    "statements": [
                      {
                        "assignments": [
                          2238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2238,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1425:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2271,
                            "src": "1411:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                              "typeString": "contract AuctionOrSale"
                            },
                            "typeName": {
                              "id": 2237,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2236,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1411:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1411:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2252,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2242,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "1455:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2243,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "1461:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2244,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2192,
                              "src": "1469:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2245,
                              "name": "_auctionTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2194,
                              "src": "1477:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2248,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1499:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1499:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1491:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2246,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1491:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1491:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1437:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_address_$returns$_t_contract$_AuctionOrSale_$2086_$",
                              "typeString": "function (address,uint256,uint256,uint32,address) returns (contract AuctionOrSale)"
                            },
                            "typeName": {
                              "id": 2240,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2239,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1441:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1441:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            }
                          },
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1437:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                            "typeString": "contract AuctionOrSale"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1411:100:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2258,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2238,
                                  "src": "1550:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1542:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2256,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1542:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1542:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2253,
                              "name": "allAuctions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2169,
                              "src": "1525:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1525:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1525:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2261,
                        "nodeType": "ExpressionStatement",
                        "src": "1525:36:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2265,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2238,
                                  "src": "1599:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1591:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2263,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1591:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2267,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1611:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1611:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2262,
                            "name": "NewAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "1580:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1580:42:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2270,
                        "nodeType": "EmitStatement",
                        "src": "1575:47:11"
                      }
                    ]
                  },
                  "id": 2272,
                  "nodeType": "IfStatement",
                  "src": "1144:489:11",
                  "trueBody": {
                    "id": 2235,
                    "nodeType": "Block",
                    "src": "1165:219:11",
                    "statements": [
                      {
                        "assignments": [
                          2202
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2202,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1193:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2235,
                            "src": "1179:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                              "typeString": "contract AuctionOrSale"
                            },
                            "typeName": {
                              "id": 2201,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2200,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1179:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1179:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2216,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2206,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "1223:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2207,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "1229:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2208,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2192,
                              "src": "1237:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1245:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2212,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1256:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1256:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1248:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2210,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1248:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1248:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1205:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_address_$returns$_t_contract$_AuctionOrSale_$2086_$",
                              "typeString": "function (address,uint256,uint256,uint32,address) returns (contract AuctionOrSale)"
                            },
                            "typeName": {
                              "id": 2204,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2203,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1209:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1209:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            }
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1205:63:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                            "typeString": "contract AuctionOrSale"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1179:89:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2222,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2202,
                                  "src": "1304:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1296:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2220,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1296:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1296:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2217,
                              "name": "allSales",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2166,
                              "src": "1282:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1282:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1282:33:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2225,
                        "nodeType": "ExpressionStatement",
                        "src": "1282:33:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2229,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2202,
                                  "src": "1350:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1342:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2227,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1342:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1342:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2231,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1362:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1362:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2226,
                            "name": "NewSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "1334:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1334:39:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2234,
                        "nodeType": "EmitStatement",
                        "src": "1329:44:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2186,
              "nodeType": "StructuredDocumentation",
              "src": "554:481:11",
              "text": "@dev impossible de faire 2 contrats à cause du problème d'interface\n@notice crée un nouveau contrat de vente ou d'auction pour un nft\n@param _nft est l'addresse de la collection du nft\n@param _nftId est l'id du nft\n@param _price est le prix de vente dans le cas d'une sale, et le prix de départ pour une auction\n@param _auctionTime est le temps que doit durer l'enchere. Si il est à zero la fonction crée une vente, sinon une auction "
            },
            "functionSelector": "73e22794",
            "id": 2274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newSaleOrAuction",
            "nameLocation": "1049:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1074:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1066:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1085:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1080:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2192,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1098:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1093:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2194,
                  "mutability": "mutable",
                  "name": "_auctionTime",
                  "nameLocation": "1113:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1106:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2193,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:61:11"
            },
            "returnParameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:11"
            },
            "scope": 2293,
            "src": "1040:599:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2282,
              "nodeType": "Block",
              "src": "1707:32:11",
              "statements": [
                {
                  "expression": {
                    "id": 2280,
                    "name": "allSales",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2166,
                    "src": "1724:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2279,
                  "id": 2281,
                  "nodeType": "Return",
                  "src": "1717:15:11"
                }
              ]
            },
            "functionSelector": "33396917",
            "id": 2283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllSales",
            "nameLocation": "1654:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:2:11"
            },
            "returnParameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "1689:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2276,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1689:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2277,
                    "nodeType": "ArrayTypeName",
                    "src": "1689:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:19:11"
            },
            "scope": 2293,
            "src": "1645:94:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2291,
              "nodeType": "Block",
              "src": "1810:35:11",
              "statements": [
                {
                  "expression": {
                    "id": 2289,
                    "name": "allAuctions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2169,
                    "src": "1827:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2288,
                  "id": 2290,
                  "nodeType": "Return",
                  "src": "1820:18:11"
                }
              ]
            },
            "functionSelector": "cbd2bdfd",
            "id": 2292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllAuctions",
            "nameLocation": "1754:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:11"
            },
            "returnParameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "1792:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2285,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1792:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2286,
                    "nodeType": "ArrayTypeName",
                    "src": "1792:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1791:19:11"
            },
            "scope": 2293,
            "src": "1745:100:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2294,
        "src": "105:1742:11",
        "usedErrors": []
      }
    ],
    "src": "32:1815:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/SellingFactory.sol",
    "exportedSymbols": {
      "AuctionOrSale": [
        2086
      ],
      "IERC721": [
        1604
      ],
      "SellingFactory": [
        2293
      ]
    },
    "id": 2294,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2161,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "project:/contracts/AuctionOrSale.sol",
        "file": "./AuctionOrSale.sol",
        "id": 2162,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2294,
        "sourceUnit": 2087,
        "src": "74:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SellingFactory",
        "contractDependencies": [
          2086
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2293,
        "linearizedBaseContracts": [
          2293
        ],
        "name": "SellingFactory",
        "nameLocation": "114:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2163,
              "nodeType": "StructuredDocumentation",
              "src": "134:117:11",
              "text": "@dev il faudrait créer une fonction qui nettoie les tableaux et qui se lance à chaque création de auctionOrSale"
            },
            "id": 2166,
            "mutability": "mutable",
            "name": "allSales",
            "nameLocation": "266:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 2293,
            "src": "256:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2164,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2165,
              "nodeType": "ArrayTypeName",
              "src": "256:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2169,
            "mutability": "mutable",
            "name": "allAuctions",
            "nameLocation": "334:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 2293,
            "src": "324:21:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2167,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2168,
              "nodeType": "ArrayTypeName",
              "src": "324:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "83f35c3d500677e8300bf0bbf471882d821904d2b410c5df88c5ca5d3ec0907a",
            "id": 2175,
            "name": "NewSale",
            "nameLocation": "398:7:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2171,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "422:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2175,
                  "src": "406:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "441:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2175,
                  "src": "433:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:44:11"
            },
            "src": "392:58:11"
          },
          {
            "anonymous": false,
            "eventSelector": "3d7974c32ce472d784c795bc3d4465e0b7d5d323530e5bd66c1e93586f22179f",
            "id": 2181,
            "name": "NewAuction",
            "nameLocation": "461:10:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2177,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "488:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "472:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "507:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "499:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:44:11"
            },
            "src": "455:61:11"
          },
          {
            "anonymous": false,
            "eventSelector": "330da4cde831ccab151372275307c2f0cce2bcce846635cd66e6908f10d20363",
            "id": 2185,
            "name": "Debug",
            "nameLocation": "528:5:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "542:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "534:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:15:11"
            },
            "src": "522:27:11"
          },
          {
            "body": {
              "id": 2273,
              "nodeType": "Block",
              "src": "1134:505:11",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2197,
                      "name": "_auctionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2194,
                      "src": "1147:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1163:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1147:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2271,
                    "nodeType": "Block",
                    "src": "1397:236:11",
                    "statements": [
                      {
                        "assignments": [
                          2238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2238,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1425:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2271,
                            "src": "1411:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                              "typeString": "contract AuctionOrSale"
                            },
                            "typeName": {
                              "id": 2237,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2236,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1411:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1411:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2252,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2242,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "1455:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2243,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "1461:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2244,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2192,
                              "src": "1469:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2245,
                              "name": "_auctionTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2194,
                              "src": "1477:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2248,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1499:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1499:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1491:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2246,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1491:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1491:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1437:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_address_$returns$_t_contract$_AuctionOrSale_$2086_$",
                              "typeString": "function (address,uint256,uint256,uint32,address) returns (contract AuctionOrSale)"
                            },
                            "typeName": {
                              "id": 2240,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2239,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1441:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1441:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            }
                          },
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1437:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                            "typeString": "contract AuctionOrSale"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1411:100:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2258,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2238,
                                  "src": "1550:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1542:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2256,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1542:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1542:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2253,
                              "name": "allAuctions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2169,
                              "src": "1525:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1525:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1525:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2261,
                        "nodeType": "ExpressionStatement",
                        "src": "1525:36:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2265,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2238,
                                  "src": "1599:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1591:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2263,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1591:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2267,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1611:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1611:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2262,
                            "name": "NewAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "1580:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1580:42:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2270,
                        "nodeType": "EmitStatement",
                        "src": "1575:47:11"
                      }
                    ]
                  },
                  "id": 2272,
                  "nodeType": "IfStatement",
                  "src": "1144:489:11",
                  "trueBody": {
                    "id": 2235,
                    "nodeType": "Block",
                    "src": "1165:219:11",
                    "statements": [
                      {
                        "assignments": [
                          2202
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2202,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1193:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2235,
                            "src": "1179:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                              "typeString": "contract AuctionOrSale"
                            },
                            "typeName": {
                              "id": 2201,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2200,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1179:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1179:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2216,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2206,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "1223:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2207,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "1229:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2208,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2192,
                              "src": "1237:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1245:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2212,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1256:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1256:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1248:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2210,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1248:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1248:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1205:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_address_$returns$_t_contract$_AuctionOrSale_$2086_$",
                              "typeString": "function (address,uint256,uint256,uint32,address) returns (contract AuctionOrSale)"
                            },
                            "typeName": {
                              "id": 2204,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2203,
                                "name": "AuctionOrSale",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2086,
                                "src": "1209:13:11"
                              },
                              "referencedDeclaration": 2086,
                              "src": "1209:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                "typeString": "contract AuctionOrSale"
                              }
                            }
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1205:63:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                            "typeString": "contract AuctionOrSale"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1179:89:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2222,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2202,
                                  "src": "1304:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1296:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2220,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1296:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1296:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2217,
                              "name": "allSales",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2166,
                              "src": "1282:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1282:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1282:33:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2225,
                        "nodeType": "ExpressionStatement",
                        "src": "1282:33:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2229,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2202,
                                  "src": "1350:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AuctionOrSale_$2086",
                                    "typeString": "contract AuctionOrSale"
                                  }
                                ],
                                "id": 2228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1342:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2227,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1342:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1342:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2231,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1362:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1362:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2226,
                            "name": "NewSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "1334:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1334:39:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2234,
                        "nodeType": "EmitStatement",
                        "src": "1329:44:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2186,
              "nodeType": "StructuredDocumentation",
              "src": "554:481:11",
              "text": "@dev impossible de faire 2 contrats à cause du problème d'interface\n@notice crée un nouveau contrat de vente ou d'auction pour un nft\n@param _nft est l'addresse de la collection du nft\n@param _nftId est l'id du nft\n@param _price est le prix de vente dans le cas d'une sale, et le prix de départ pour une auction\n@param _auctionTime est le temps que doit durer l'enchere. Si il est à zero la fonction crée une vente, sinon une auction "
            },
            "functionSelector": "73e22794",
            "id": 2274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newSaleOrAuction",
            "nameLocation": "1049:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1074:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1066:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1085:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1080:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2192,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1098:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1093:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2194,
                  "mutability": "mutable",
                  "name": "_auctionTime",
                  "nameLocation": "1113:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "1106:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2193,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:61:11"
            },
            "returnParameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:11"
            },
            "scope": 2293,
            "src": "1040:599:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2282,
              "nodeType": "Block",
              "src": "1707:32:11",
              "statements": [
                {
                  "expression": {
                    "id": 2280,
                    "name": "allSales",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2166,
                    "src": "1724:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2279,
                  "id": 2281,
                  "nodeType": "Return",
                  "src": "1717:15:11"
                }
              ]
            },
            "functionSelector": "33396917",
            "id": 2283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllSales",
            "nameLocation": "1654:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:2:11"
            },
            "returnParameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "1689:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2276,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1689:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2277,
                    "nodeType": "ArrayTypeName",
                    "src": "1689:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:19:11"
            },
            "scope": 2293,
            "src": "1645:94:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2291,
              "nodeType": "Block",
              "src": "1810:35:11",
              "statements": [
                {
                  "expression": {
                    "id": 2289,
                    "name": "allAuctions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2169,
                    "src": "1827:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2288,
                  "id": 2290,
                  "nodeType": "Return",
                  "src": "1820:18:11"
                }
              ]
            },
            "functionSelector": "cbd2bdfd",
            "id": 2292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllAuctions",
            "nameLocation": "1754:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:11"
            },
            "returnParameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "1792:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2285,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1792:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2286,
                    "nodeType": "ArrayTypeName",
                    "src": "1792:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1791:19:11"
            },
            "scope": 2293,
            "src": "1745:100:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2294,
        "src": "105:1742:11",
        "usedErrors": []
      }
    ],
    "src": "32:1815:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x1544A87423F5096DCFE811ad98A253a3d6dDB190",
      "transactionHash": "0x5111d721ee4aaca1f3f2929bdcf0b5a71aea948d6c8db1a333c8cd5fa479002a"
    },
    "1652277985657": {
      "events": {},
      "links": {},
      "address": "0x77b5E7cC8f0271380887E42faF44adF4cE7afcb4",
      "transactionHash": "0x22a747f39eb4ea49ab2ee04321dd5a00f150833a71f223e1b8b0dbe46cf5c4ea"
    },
    "1652346187434": {
      "events": {},
      "links": {},
      "address": "0x4fc4bf5D5C7B08D86e43033d4A80EeeF181eb296",
      "transactionHash": "0xe7e51d0f93ecf68129462f4c18640a1092b1c5acc7abbea371b4257838341dd8"
    },
    "1652347886749": {
      "events": {},
      "links": {},
      "address": "0x0d84DFE408373dEc2f3718cF90128041B53a2D3D",
      "transactionHash": "0x334da50c747b31b5b858e3fc9ac7bf8eb5cb7708f5761fdac1e5aae4f35f3b53"
    },
    "1652348489252": {
      "events": {},
      "links": {},
      "address": "0x46F4304db103742F40255AD43244C9c659281A71",
      "transactionHash": "0xfc635233f84bad5a40384d624131998bc9a12e735b4bcd4c0a3cefbdd7c80cf6"
    },
    "1652350322817": {
      "events": {},
      "links": {},
      "address": "0x91492a3C04EF5c0Bc20Ef04B05FF24379C06eBDe",
      "transactionHash": "0xfcf03f8db39b37104bc9619a2b94ac1665cff6340a9d2d0a042260bf750a7571"
    },
    "1652435274025": {
      "events": {},
      "links": {},
      "address": "0xD3ddf7FD057c19862Aea48340AC7C799f3Dd1680",
      "transactionHash": "0xced34e6edfd16f0b4b59d73c3df9543d434d66cec61f039ae998ad0af7371f60"
    },
    "1652439618315": {
      "events": {},
      "links": {},
      "address": "0x9825067aeC38Ad80551B5bf79B10bd9CeC42bFEc",
      "transactionHash": "0x2f4a8262bda92fa49d1fe95f406f885e9bb1436e216256378cd34866fced57f9"
    },
    "1652465045092": {
      "events": {},
      "links": {},
      "address": "0xC5829c8cd4582A7d8617dA61E49293a1cb4AC2fe",
      "transactionHash": "0x345c8026be51bfd3c0d496bf05932af2c3ab035992f5da241beda96a59d2a3b6"
    },
    "1652520137413": {
      "events": {},
      "links": {},
      "address": "0x76b4535bd646dcC07a3183960Aa6a241aA88f57A",
      "transactionHash": "0xcb6c3d5c76c0ed197de8f2d54d1a6de168de88d686b4cea5070c0f0493d5048c"
    },
    "1652530848014": {
      "events": {},
      "links": {},
      "address": "0xD132D1fC17eB38BeffBf0383a1b2793E1e4fd263",
      "transactionHash": "0x2c235be2af5b06b3e8e046670b73546620d057563fc63595db1511f9dea811fa"
    },
    "1652531032185": {
      "events": {},
      "links": {},
      "address": "0x4A7aA2620CcB7A01Fe19A5a7EaDBAbE6807aA42a",
      "transactionHash": "0xa634c1373c7ce50fed53d6a7640ee125167fce601791132174d396a06936a821"
    },
    "1652552092604": {
      "events": {},
      "links": {},
      "address": "0x2e4fbeDF36F6c9B10b30Fa5487a0a08544b0428D",
      "transactionHash": "0x57560657fbfe9c1a3e952b586221aa4f1f3bd2c36f1e8e24862395657d4b9827"
    },
    "1652562864410": {
      "events": {},
      "links": {},
      "address": "0xf001924d51EA129cB37baF97df98228c673Fbc6F",
      "transactionHash": "0x6fc59664b13a2af4d452e20b4f35b1ddf6f3cc5c50dab73536c4124723306c6b"
    },
    "1652602081710": {
      "events": {},
      "links": {},
      "address": "0x29a0f5D95715d541b745b363bfcad21BfE577Be2",
      "transactionHash": "0x1ed64ab3f82220631b821712335e23176c116557ae1702e03369087d1a3fe586"
    },
    "1652608929179": {
      "events": {},
      "links": {},
      "address": "0xf8ea86EBDd24484D463980917B8Cc280405c965f",
      "transactionHash": "0xfb59bdc21d62f5c55aa478058771f50f4ce41348e2d7aa427fa2ba357ae77e05"
    },
    "1652610528451": {
      "events": {},
      "links": {},
      "address": "0x5e20a3e33D191a913F5861644A1e3aC08aC4dC09",
      "transactionHash": "0x2c9c60f50d556c33b88a7b335ffc456ac9e28e9fee3d6e8d1c20a4a60279b3c3"
    },
    "1652623424814": {
      "events": {},
      "links": {},
      "address": "0xD536C785c1f7e1463f33AfA0db68E3B180aBC01f",
      "transactionHash": "0xaed8c679da5bc13d1363eb435b327d42b6b6ae66e4424748c88fe5a3650c79fe"
    },
    "1652627918929": {
      "events": {},
      "links": {},
      "address": "0x5aC9443769813f0b20b566220597853063B695e5",
      "transactionHash": "0x8fdbd00f273c3a2bad917e1ede53aa6cb1354dadebe9f75173fa711d779d3b8a"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-15T15:56:45.308Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "newSaleOrAuction(address,uint256,uint256,uint32)": {
        "details": "impossible de faire 2 contrats à cause du problème d'interface",
        "params": {
          "_auctionTime": "est le temps que doit durer l'enchere. Si il est à zero la fonction crée une vente, sinon une auction ",
          "_nft": "est l'addresse de la collection du nft",
          "_nftId": "est l'id du nft",
          "_price": "est le prix de vente dans le cas d'une sale, et le prix de départ pour une auction"
        }
      }
    },
    "stateVariables": {
      "allSales": {
        "details": "il faudrait créer une fonction qui nettoie les tableaux et qui se lance à chaque création de auctionOrSale"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "newSaleOrAuction(address,uint256,uint256,uint32)": {
        "notice": "crée un nouveau contrat de vente ou d'auction pour un nft"
      }
    },
    "version": 1
  }
}